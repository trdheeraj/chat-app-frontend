{"ast":null,"code":"var _jsxFileName = \"/Users/dheerajthasmaravindranath/hobby/chat-app/client/slack/src/components/RoomList.js\";\nimport React from 'react';\nimport Proptypes from 'prop-types';\n\nconst RoomList = props => {\n  const rooms = props.rooms,\n        currentRoom = props.currentRoom,\n        connectToRoom = props.connectToRoom,\n        currentUser = props.currentUser;\n  const roomList = rooms.map(room => {\n    const roomIcon = !room.isPrivate ? '#' : '';\n    const isRoomActive = room.id === currentRoom.id ? 'active' : '';\n    return React.createElement(\"li\", {\n      className: isRoomActive,\n      key: room.id,\n      onClick: () => connectToRoom(room.id),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 11\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: \"room-icon\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16\n      },\n      __self: this\n    }, roomIcon), room.customData && room.customData.isDirectMessage ? React.createElement(\"span\", {\n      className: \"room-name\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18\n      },\n      __self: this\n    }, room.customData.userIds.filter(id => id !== currentUser.id)[0]) : React.createElement(\"span\", {\n      className: \"room-name\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22\n      },\n      __self: this\n    }, room.name));\n  });\n  return React.createElement(\"div\", {\n    className: \"rooms\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }, React.createElement(\"ul\", {\n    className: \"chat-rooms\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }, roomList));\n};\n\nRoomList.propTypes = {\n  rooms: Proptypes.array.isRequired,\n  currentRoom: Proptypes.object.isRequired,\n  connectToRoom: Proptypes.func.isRequired,\n  currentUser: Proptypes.object.isRequired\n};\nexport default RoomList;","map":{"version":3,"sources":["/Users/dheerajthasmaravindranath/hobby/chat-app/client/slack/src/components/RoomList.js"],"names":["React","Proptypes","RoomList","props","rooms","currentRoom","connectToRoom","currentUser","roomList","map","room","roomIcon","isPrivate","isRoomActive","id","customData","isDirectMessage","userIds","filter","name","propTypes","array","isRequired","object","func"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;;AAEA,MAAMC,QAAQ,GAAGC,KAAK,IAAI;AAAA,QAChBC,KADgB,GACmCD,KADnC,CAChBC,KADgB;AAAA,QACTC,WADS,GACmCF,KADnC,CACTE,WADS;AAAA,QACIC,aADJ,GACmCH,KADnC,CACIG,aADJ;AAAA,QACmBC,WADnB,GACmCJ,KADnC,CACmBI,WADnB;AAExB,QAAMC,QAAQ,GAAGJ,KAAK,CAACK,GAAN,CAAUC,IAAI,IAAI;AACjC,UAAMC,QAAQ,GAAG,CAACD,IAAI,CAACE,SAAN,GAAkB,GAAlB,GAAwB,EAAzC;AACA,UAAMC,YAAY,GAAGH,IAAI,CAACI,EAAL,KAAYT,WAAW,CAACS,EAAxB,GAA6B,QAA7B,GAAwC,EAA7D;AAEA,WACE;AACE,MAAA,SAAS,EAAED,YADb;AAEE,MAAA,GAAG,EAAEH,IAAI,CAACI,EAFZ;AAGE,MAAA,OAAO,EAAE,MAAMR,aAAa,CAACI,IAAI,CAACI,EAAN,CAH9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAKE;AAAM,MAAA,SAAS,EAAC,WAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA6BH,QAA7B,CALF,EAMGD,IAAI,CAACK,UAAL,IAAmBL,IAAI,CAACK,UAAL,CAAgBC,eAAnC,GACC;AAAM,MAAA,SAAS,EAAC,WAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGN,IAAI,CAACK,UAAL,CAAgBE,OAAhB,CAAwBC,MAAxB,CAA+BJ,EAAE,IAAIA,EAAE,KAAKP,WAAW,CAACO,EAAxD,EAA4D,CAA5D,CADH,CADD,GAKC;AAAM,MAAA,SAAS,EAAC,WAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA6BJ,IAAI,CAACS,IAAlC,CAXJ,CADF;AAgBD,GApBgB,CAAjB;AAqBA,SACE;AAAK,IAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAI,IAAA,SAAS,EAAC,YAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA4BX,QAA5B,CADF,CADF;AAKD,CA5BD;;AA8BAN,QAAQ,CAACkB,SAAT,GAAqB;AACnBhB,EAAAA,KAAK,EAAEH,SAAS,CAACoB,KAAV,CAAgBC,UADJ;AAEnBjB,EAAAA,WAAW,EAAEJ,SAAS,CAACsB,MAAV,CAAiBD,UAFX;AAGnBhB,EAAAA,aAAa,EAAEL,SAAS,CAACuB,IAAV,CAAeF,UAHX;AAInBf,EAAAA,WAAW,EAAEN,SAAS,CAACsB,MAAV,CAAiBD;AAJX,CAArB;AAOA,eAAepB,QAAf","sourcesContent":["import React from 'react';\nimport Proptypes from 'prop-types';\n\nconst RoomList = props => {\n  const { rooms, currentRoom, connectToRoom, currentUser } = props;\n  const roomList = rooms.map(room => {\n    const roomIcon = !room.isPrivate ? '#' : '';\n    const isRoomActive = room.id === currentRoom.id ? 'active' : '';\n\n    return (\n      <li\n        className={isRoomActive}\n        key={room.id}\n        onClick={() => connectToRoom(room.id)}\n      >\n        <span className=\"room-icon\">{roomIcon}</span>\n        {room.customData && room.customData.isDirectMessage ? (\n          <span className=\"room-name\">\n            {room.customData.userIds.filter(id => id !== currentUser.id)[0]}\n          </span>\n        ) : (\n          <span className=\"room-name\">{room.name}</span>\n        )}\n      </li>\n    );\n  });\n  return (\n    <div className=\"rooms\">\n      <ul className=\"chat-rooms\">{roomList}</ul>\n    </div>\n  );\n};\n\nRoomList.propTypes = {\n  rooms: Proptypes.array.isRequired,\n  currentRoom: Proptypes.object.isRequired,\n  connectToRoom: Proptypes.func.isRequired,\n  currentUser: Proptypes.object.isRequired,\n};\n\nexport default RoomList;\n"]},"metadata":{},"sourceType":"module"}