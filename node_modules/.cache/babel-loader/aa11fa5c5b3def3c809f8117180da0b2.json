{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nvar _react = require(\"react\");\n\nvar _react2 = _interopRequireDefault(_react);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n/**\n * A simple loading indicator, modeled after react-select.  Since react styles\n * don't support animations, hack it so we inject the keyframe animation\n * into the document.\n */\n\n\nvar STYLESHEET_NAME = \"__react-multi-select_style_inject__\";\n\nfunction findStylesheet() {\n  var styleSheet = Array.from(document.styleSheets).find(function (stylesheet) {\n    return stylesheet.title === STYLESHEET_NAME;\n  }); // upcast as CSSStyleSheet\n\n  var cssStylesheet = styleSheet;\n  return cssStylesheet;\n}\n\nfunction registerStylesheet(css) {\n  try {\n    if (findStylesheet()) {\n      return;\n    }\n\n    var style = document.createElement(\"style\");\n    style.setAttribute(\"title\", STYLESHEET_NAME);\n    document.head && document.head.appendChild(style);\n    var stylesheet = findStylesheet();\n\n    if (!stylesheet) {\n      // Someting bad happened.  Abort!\n      return;\n    }\n\n    stylesheet.insertRule(css, 0);\n  } catch (e) {}\n}\n\nvar LoadingIndicator = function (_Component) {\n  _inherits(LoadingIndicator, _Component);\n\n  function LoadingIndicator() {\n    _classCallCheck(this, LoadingIndicator);\n\n    return _possibleConstructorReturn(this, (LoadingIndicator.__proto__ || Object.getPrototypeOf(LoadingIndicator)).apply(this, arguments));\n  }\n\n  _createClass(LoadingIndicator, [{\n    key: \"componentWillMount\",\n    value: function componentWillMount() {\n      // React styles don't support adding keyframe rules.  Create a\n      // stylesheet and inject the keyframe animarion into it.\n      registerStylesheet(keyFrames);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return _react2.default.createElement(\"span\", {\n        className: \"loading-indicator\",\n        style: styles.loading\n      });\n    }\n  }]);\n\n  return LoadingIndicator;\n}(_react.Component);\n\nLoadingIndicator.propTypes = {};\nvar keyFrames = \"\\n@keyframes react-multi-select_loading-spin {\\n    to {\\n        transform: rotate(1turn);\\n    }\\n}\\n\";\nvar styles = {\n  loading: {\n    \"animation\": \"react-multi-select_loading-spin 400ms infinite linear\",\n    \"width\": \"16px\",\n    \"height\": \"16px\",\n    boxSizing: \"border-box\",\n    borderRadius: \"50%\",\n    border: \"2px solid #ccc\",\n    borderRightColor: \"#333\",\n    display: \"inline-block\",\n    position: \"relative\",\n    verticalAlign: \"middle\"\n  }\n};\nexports.default = LoadingIndicator;","map":null,"metadata":{},"sourceType":"script"}