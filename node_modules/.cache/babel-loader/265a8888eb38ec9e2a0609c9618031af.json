{"ast":null,"code":"import _toConsumableArray from \"/home/dev/Code/react-multiselect-list/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"/home/dev/Code/react-multiselect-list/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/dev/Code/react-multiselect-list/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/dev/Code/react-multiselect-list/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/dev/Code/react-multiselect-list/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/dev/Code/react-multiselect-list/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport React, { Component } from 'react';\nimport './Multiselect.css';\nexport var Multiselect =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Multiselect, _Component);\n\n  function Multiselect(props) {\n    var _this;\n\n    _classCallCheck(this, Multiselect);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Multiselect).call(this, props));\n    var selected = props.selected,\n        list = props.list;\n    list = list.map(function (e) {\n      var s = {\n        value: e,\n        selected: false\n      };\n\n      if (selected && selected.indexOf(e) > -1) {\n        s.selected = true;\n      }\n\n      return s;\n    });\n    _this.state = {\n      values: _toConsumableArray(list),\n      selectedValues: selected || [],\n      searched: [],\n      allSelected: false\n    };\n\n    if (selected.length) {\n      props.onSelectItem(_this.state.selectedValues);\n    }\n\n    return _this;\n  }\n\n  _createClass(Multiselect, [{\n    key: \"selectValue\",\n    value: function selectValue(item) {\n      var _this2 = this;\n\n      if (item.selected) {\n        var newItems = this.state.selectedValues.filter(function (e) {\n          return e !== item.value;\n        });\n        this.setState({\n          selectedValues: newItems,\n          allSelected: false\n        }, function () {\n          _this2.props.onSelectItem(_this2.state.selectedValues);\n        });\n      } else {\n        this.setState({\n          selectedValues: _toConsumableArray(this.state.selectedValues).concat([item.value])\n        }, function () {\n          _this2.props.onSelectItem(_this2.state.selectedValues);\n        });\n      }\n\n      item.selected = !item.selected;\n      this.setState(function (state) {\n        return {\n          values: state.values\n        };\n      });\n    }\n  }, {\n    key: \"searchText\",\n    value: function searchText() {\n      var _this3 = this;\n\n      var values = this.state.values;\n      var s = values.filter(function (e) {\n        return e.value.toLowerCase().indexOf(_this3.textInput.value) > -1;\n      });\n      this.setState({\n        searched: s\n      });\n    }\n  }, {\n    key: \"checkAll\",\n    value: function checkAll() {\n      var _this4 = this;\n\n      var _this$state = this.state,\n          allSelected = _this$state.allSelected,\n          values = _this$state.values;\n      var onSelectItem = this.props.onSelectItem;\n      var v = [];\n      values.forEach(function (e) {\n        if (allSelected) e.selected = false;else e.selected = true;\n\n        if (e.selected) {\n          v.push(e.value);\n        }\n      });\n      this.setState({\n        selectedValues: v,\n        allSelected: !allSelected\n      }, function () {\n        onSelectItem(_this4.state.selectedValues);\n      });\n    }\n  }, {\n    key: \"displayList\",\n    value: function displayList(e, i, theme) {\n      return React.createElement(\"div\", {\n        key: i,\n        className: e.selected ? theme + ' selected value' : theme + ' value',\n        onClick: this.selectValue.bind(this, e)\n      }, e.value);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this5 = this;\n\n      var _this$state2 = this.state,\n          values = _this$state2.values,\n          searched = _this$state2.searched,\n          allSelected = _this$state2.allSelected;\n      var _this$props = this.props,\n          title = _this$props.title,\n          theme = _this$props.theme;\n      return React.createElement(\"div\", {\n        className: \"list\"\n      }, React.createElement(\"h1\", {\n        className: \"title \".concat(theme)\n      }, title), React.createElement(\"div\", {\n        className: \"topbar\"\n      }, React.createElement(\"input\", {\n        className: \"search-box\",\n        placeholder: \"Search\",\n        onChange: this.searchText.bind(this),\n        ref: function ref(input) {\n          _this5.textInput = input;\n        }\n      }), !allSelected ? React.createElement(\"button\", {\n        className: \"select-all \".concat(theme),\n        onClick: this.checkAll.bind(this)\n      }, \"Select All\") : React.createElement(\"button\", {\n        className: \"deselect-all \".concat(theme),\n        onClick: this.checkAll.bind(this)\n      }, \"Deselect All\")), React.createElement(\"div\", {\n        className: \"values\"\n      }, searched.length === 0 ? values.map(function (e, i) {\n        return _this5.displayList(e, i, theme);\n      }) : values.map(function (e, i) {\n        return React.createElement(\"div\", {\n          key: i\n        }, searched.indexOf(e) > -1 ? _this5.displayList(e, i, theme) : null);\n      })));\n    }\n  }]);\n\n  return Multiselect;\n}(Component);","map":null,"metadata":{},"sourceType":"module"}