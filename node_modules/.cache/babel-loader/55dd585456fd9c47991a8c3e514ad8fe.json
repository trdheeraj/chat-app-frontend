{"ast":null,"code":"var _jsxFileName = \"/Users/dheerajthasmaravindranath/hobby/chat-app/client/slack/src/components/Dialog.js\";\nimport React from 'react';\nimport Proptypes from 'prop-types';\n\nconst Dialog = props => {\n  const userId = props.userId,\n        handleInput = props.handleInput,\n        connectToChatkit = props.connectToChatkit;\n  return React.createElement(\"div\", {\n    className: \"dialog-container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"dialog\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9\n    },\n    __self: this\n  }, React.createElement(\"form\", {\n    className: \"dialog-form\",\n    onSubmit: connectToChatkit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    className: \"username-label\",\n    htmlFor: \"username\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11\n    },\n    __self: this\n  }, \"Login with your username\"), React.createElement(\"input\", {\n    id: \"username\",\n    className: \"username-input\",\n    autoFocus: true,\n    type: \"text\",\n    name: \"userId\",\n    value: userId,\n    onChange: handleInput,\n    placeholder: \"Enter your username\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14\n    },\n    __self: this\n  }), React.createElement(\"button\", {\n    type: \"submit\",\n    className: \"submit-btn\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }, \"Submit\"))));\n};\n\nDialog.propTypes = {\n  userId: Proptypes.string.isRequired,\n  handleInput: Proptypes.func.isRequired,\n  connectToChatkit: Proptypes.func.isRequired\n};\nexport default Dialog;","map":{"version":3,"sources":["/Users/dheerajthasmaravindranath/hobby/chat-app/client/slack/src/components/Dialog.js"],"names":["React","Proptypes","Dialog","props","userId","handleInput","connectToChatkit","propTypes","string","isRequired","func"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;;AAEA,MAAMC,MAAM,GAAGC,KAAK,IAAI;AAAA,QACdC,MADc,GAC4BD,KAD5B,CACdC,MADc;AAAA,QACNC,WADM,GAC4BF,KAD5B,CACNE,WADM;AAAA,QACOC,gBADP,GAC4BH,KAD5B,CACOG,gBADP;AAGtB,SACE;AAAK,IAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAM,IAAA,SAAS,EAAC,aAAhB;AAA8B,IAAA,QAAQ,EAAEA,gBAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAO,IAAA,SAAS,EAAC,gBAAjB;AAAkC,IAAA,OAAO,EAAC,UAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gCADF,EAIE;AACE,IAAA,EAAE,EAAC,UADL;AAEE,IAAA,SAAS,EAAC,gBAFZ;AAGE,IAAA,SAAS,MAHX;AAIE,IAAA,IAAI,EAAC,MAJP;AAKE,IAAA,IAAI,EAAC,QALP;AAME,IAAA,KAAK,EAAEF,MANT;AAOE,IAAA,QAAQ,EAAEC,WAPZ;AAQE,IAAA,WAAW,EAAC,qBARd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJF,EAcE;AAAQ,IAAA,IAAI,EAAC,QAAb;AAAsB,IAAA,SAAS,EAAC,YAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAdF,CADF,CADF,CADF;AAwBD,CA3BD;;AA6BAH,MAAM,CAACK,SAAP,GAAmB;AACjBH,EAAAA,MAAM,EAAEH,SAAS,CAACO,MAAV,CAAiBC,UADR;AAEjBJ,EAAAA,WAAW,EAAEJ,SAAS,CAACS,IAAV,CAAeD,UAFX;AAGjBH,EAAAA,gBAAgB,EAAEL,SAAS,CAACS,IAAV,CAAeD;AAHhB,CAAnB;AAMA,eAAeP,MAAf","sourcesContent":["import React from 'react';\nimport Proptypes from 'prop-types';\n\nconst Dialog = props => {\n  const { userId, handleInput, connectToChatkit } = props;\n\n  return (\n    <div className=\"dialog-container\">\n      <div className=\"dialog\">\n        <form className=\"dialog-form\" onSubmit={connectToChatkit}>\n          <label className=\"username-label\" htmlFor=\"username\">\n            Login with your username\n          </label>\n          <input\n            id=\"username\"\n            className=\"username-input\"\n            autoFocus\n            type=\"text\"\n            name=\"userId\"\n            value={userId}\n            onChange={handleInput}\n            placeholder=\"Enter your username\"\n          />\n          <button type=\"submit\" className=\"submit-btn\">\n            Submit\n          </button>\n        </form>\n      </div>\n    </div>\n  );\n};\n\nDialog.propTypes = {\n  userId: Proptypes.string.isRequired,\n  handleInput: Proptypes.func.isRequired,\n  connectToChatkit: Proptypes.func.isRequired,\n};\n\nexport default Dialog;\n"]},"metadata":{},"sourceType":"module"}